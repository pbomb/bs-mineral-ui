// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Text = require("mineral-ui/Text");

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -1021944796,
    "end_"
  ],
  /* tuple */[
    62250832,
    "justify"
  ],
  /* tuple */[
    67859554,
    "start"
  ],
  /* tuple */[
    98248149,
    "center"
  ]
];

function alignToJs(param) {
  return Js_mapperRt.binarySearch(4, param, jsMapperConstantArray);
}

function alignFromJs(param) {
  return Js_mapperRt.revSearch(4, jsMapperConstantArray, param);
}

var mapAlignToJs = alignToJs;

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    -1055161979,
    "bold"
  ],
  /* tuple */[
    -812709613,
    "semiBold"
  ],
  /* tuple */[
    -81801163,
    "extraBold"
  ],
  /* tuple */[
    42488412,
    "regular"
  ]
];

function fontWeightToJs(param) {
  return Js_mapperRt.binarySearch(4, param, jsMapperConstantArray$1);
}

function fontWeightFromJs(param) {
  return Js_mapperRt.revSearch(4, jsMapperConstantArray$1, param);
}

var mapFontWeightToJs = fontWeightToJs;

var jsMapperConstantArray$2 = /* array */[
  /* tuple */[
    -930092545,
    "prose"
  ],
  /* tuple */[
    112,
    "p"
  ],
  /* tuple */[
    23241,
    "h1"
  ],
  /* tuple */[
    23242,
    "h2"
  ],
  /* tuple */[
    23243,
    "h3"
  ],
  /* tuple */[
    23244,
    "h4"
  ],
  /* tuple */[
    23245,
    "h5"
  ],
  /* tuple */[
    23246,
    "h6"
  ],
  /* tuple */[
    207951397,
    "mouse"
  ]
];

function appearanceToJs(param) {
  return Js_mapperRt.binarySearch(9, param, jsMapperConstantArray$2);
}

function appearanceFromJs(param) {
  return Js_mapperRt.revSearch(9, jsMapperConstantArray$2, param);
}

var mapAppearanceToJs = appearanceToJs;

function make(color, element, _inherit, noMargins, parentElement, minimal, fontWeight, primary, align, _type, appearance, children) {
  var tmp = { };
  if (color) {
    tmp.color = Js_primitive.valFromOption(color);
  }
  if (element) {
    tmp.element = Js_primitive.valFromOption(element);
  }
  var tmp$1 = Js_option.map(mapFontWeightToJs, fontWeight);
  if (tmp$1) {
    tmp.fontWeight = Js_primitive.valFromOption(tmp$1);
  }
  if (_inherit) {
    tmp.inherit = Js_primitive.valFromOption(_inherit);
  }
  if (noMargins) {
    tmp.noMargins = Js_primitive.valFromOption(noMargins);
  }
  if (parentElement) {
    tmp.parentElement = Js_primitive.valFromOption(parentElement);
  }
  if (minimal) {
    tmp.minimal = Js_primitive.valFromOption(minimal);
  }
  if (primary) {
    tmp.primary = Js_primitive.valFromOption(primary);
  }
  var tmp$2 = Js_option.map(mapAlignToJs, align);
  if (tmp$2) {
    tmp.align = Js_primitive.valFromOption(tmp$2);
  }
  if (_type) {
    tmp.type = Js_primitive.valFromOption(_type);
  }
  var tmp$3 = Js_option.map(mapAppearanceToJs, appearance);
  if (tmp$3) {
    tmp.appearance = Js_primitive.valFromOption(tmp$3);
  }
  return ReasonReact.wrapJsForReason(Text.default, tmp, children);
}

exports.alignToJs = alignToJs;
exports.alignFromJs = alignFromJs;
exports.mapAlignToJs = mapAlignToJs;
exports.fontWeightToJs = fontWeightToJs;
exports.fontWeightFromJs = fontWeightFromJs;
exports.mapFontWeightToJs = mapFontWeightToJs;
exports.appearanceToJs = appearanceToJs;
exports.appearanceFromJs = appearanceFromJs;
exports.mapAppearanceToJs = mapAppearanceToJs;
exports.make = make;
/* ReasonReact Not a pure module */
